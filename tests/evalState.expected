MkRawProg
 [MkRawInterfaceTm (MkInterface "State" ["X"]
            [MkCmd "get" [] (MkDTTy "X" MkEmpAb [])
            ,MkCmd "put" [MkDTTy "X" MkEmpAb []]
                          (MkDTTy "Unit" MkEmpAb [])])
 ,MkRawSigTm (MkSig "evalState"
   (MkCType [ MkPort MkIdAdj (MkDTTy "X" MkEmpAb [])
            , MkPort (MkAdjPlus MkIdAdj "State"
	      	       [MkDTTy "X" MkEmpAb []]) (MkDTTy "Y" MkEmpAb [])]
            (MkPeg MkOpenAb (MkDTTy "Y" MkEmpAb []))))
 ,MkRawDefTm (MkMultiHandlerClause "evalState"
 	     	      (MkRawCls [MkVPat (MkVarPat "x")
                                ,MkCmdPat "put" [MkVarPat "x'"] "k"]
 	     (MkRawComb "evalState" [MkRawId "x'"
	     	    	            ,MkRawComb "k" [MkRawId "Unit"]])))
 ,MkRawDefTm (MkMultiHandlerClause "evalState"
 	     	      (MkRawCls [MkVPat (MkVarPat "x")
                                ,MkCmdPat "get" [] "k"]
 	     (MkRawComb "evalState" [MkRawId "x"
	     	    	            ,MkRawComb "k" [MkRawId "x"]])))
 ,MkRawDefTm (MkMultiHandlerClause "evalState" (MkRawCls [MkVPat (MkVarPat "x")
                                            ,MkVPat (MkVarPat "y")]
					    (MkRawId "y")))
 ,MkRawSigTm (MkSig "main" (MkCType [] (MkPeg MkOpenAb MkStringTy)))
 ,MkRawDefTm (MkMultiHandlerClause "main" (MkRawCls []
 	     	      	       (MkRawComb "evalState"
			         [MkRawStr "Hello"
			       	 ,MkRawTmSeq (MkRawComb "put"
				 	       [MkRawComb "strcat"
                                                 [MkRawComb "get" []
					         ,MkRawStr " World!\n"]])
				 	     (MkRawComb "get" [])])))]
